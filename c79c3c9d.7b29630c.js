(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{157:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return b})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(7),o=(r(0),r(181)),i={title:"Stryker dashboard"},b={unversionedId:"General/dashboard",id:"General/dashboard",isDocsHomePage:!1,title:"Stryker dashboard",description:"The Stryker dashboard is a dashboard for mutation testing//dashboard.stryker-mutator.io. It is free to use and open source. It has the following features:",source:"@site/docs/General/dashboard.md",slug:"/General/dashboard",permalink:"/docs/General/dashboard",editUrl:"https://github.com/stryker-mutator/stryker-mutator.github.io/edit/develop/docs/General/dashboard.md",version:"current",sidebar:"docs",previous:{title:"Welcome to the RoboBar \ud83e\udd16\ud83c\udf77",permalink:"/docs/General/example"},next:{title:"Frequently Asked Questions",permalink:"/docs/General/faq"}},l=[{value:"Enable the dashboard for your project",id:"enable-the-dashboard-for-your-project",children:[]},{value:"Send your first report",id:"send-your-first-report",children:[{value:"Send a report direcly from Stryker",id:"send-a-report-direcly-from-stryker",children:[]},{value:"Send a report via curl",id:"send-a-report-via-curl",children:[]}]}],c={rightToc:l};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The Stryker dashboard is a dashboard for mutation testing: ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://dashboard.stryker-mutator.io"}),"https://dashboard.stryker-mutator.io"),". It is free to use and open source. It has the following features:"),Object(o.b)("p",null,"\ud83e\udd47 Supply a mutation score badge to pimp your readme",Object(o.b)("br",{parentName:"p"}),"\n","\ud83e\udd11 Free to use for open source",Object(o.b)("br",{parentName:"p"}),"\n","\ud83d\udcca Hosts your mutation testing report in the cloud",Object(o.b)("br",{parentName:"p"}),"\n","\ud83c\udf0e Supports all mutation testing frameworks","*"),Object(o.b)("p",null,"*"," That support the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/stryker-mutator/mutation-testing-elements/tree/master/packages/mutation-testing-report-schema"}),"mutation testing report schema"),"."),Object(o.b)("h2",{id:"enable-the-dashboard-for-your-project"},"Enable the dashboard for your project"),Object(o.b)("p",null,"Enabling the dashboard for your project is as simple as navigating to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://dashboard.stryker-mutator.io"}),"https://dashboard.stryker-mutator.io"),", logging in with your GitHub account and enabling it for your repository."),Object(o.b)("h2",{id:"send-your-first-report"},"Send your first report"),Object(o.b)("p",null,"Send your first report ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#send-a-report-direcly-from-Stryker"}),"directly from Stryker"),", or manually via ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#send-a-report-via-curl"}),"a curl request"),"."),Object(o.b)("h3",{id:"send-a-report-direcly-from-stryker"},"Send a report direcly from Stryker"),Object(o.b)("p",null,"Current status:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stryker"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stryker.NET"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stryker4s"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Full report"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Mutation score report"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"dashboard.*")," settings"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705")))),Object(o.b)("p",null,"Please visit ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/stryker-mutator/stryker-net/blob/master/docs/Reporters.md#dashboard-reporter"}),"Stryker.NET specific docs")," for Stryker.NET."),Object(o.b)("p",null,"Enabling the dashboard reporter works the same across all implementations of Stryker."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Enabling the dashboard reporter is done by adding ",Object(o.b)("inlineCode",{parentName:"li"},'"dashboard"')," to the ",Object(o.b)("inlineCode",{parentName:"li"},'"reporters"')," configuration."),Object(o.b)("li",{parentName:"ol"},"Configure the reporter:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},'Configuring the "project" is done via the ',Object(o.b)("inlineCode",{parentName:"li"},"dashboard.project")," configuration key (default: retrieved from the environment)"),Object(o.b)("li",{parentName:"ul"},'Configuring the "module is done via the ',Object(o.b)("inlineCode",{parentName:"li"},"dashboard.module")," configuration key."),Object(o.b)("li",{parentName:"ul"},'Configuring the "version" is done via the ',Object(o.b)("inlineCode",{parentName:"li"},"dashboard.version")," configuration key. (default: retrieved from environment)"),Object(o.b)("li",{parentName:"ul"},'Configuring the "baseUrl" is done via the ',Object(o.b)("inlineCode",{parentName:"li"},"dashboard.baseUrl"),' configuration key. It defaults to "',Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://dashboard.stryker-mutator.io"}),"https://dashboard.stryker-mutator.io"),'".'),Object(o.b)("li",{parentName:"ul"},'Configuring the "reportType" is done via the ',Object(o.b)("inlineCode",{parentName:"li"},"dashboard.reporType")," configuration key."))),Object(o.b)("li",{parentName:"ol"},'Configuring the API key by setting the "STRYKER_DASHBOARD_API_KEY" variable.')),Object(o.b)("h4",{id:"retrieved-from-environment"},"Retrieved from environment"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"project")," and ",Object(o.b)("inlineCode",{parentName:"p"},"version")," settings can also be retrieved from your build servers environment. This is not supported for all CI providers or Stryker implementations. See the table below for the current support."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stryker"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stryker.NET"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stryker4s"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Travis"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"CircleCI"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Azure dev/ops"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GitlabCI"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Github actions"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u274c"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u2705")))),Object(o.b)("h3",{id:"send-a-report-via-curl"},"Send a report via curl"),Object(o.b)("p",null,"You can send a report with an HTTP PUT request, like so:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"curl -X PUT \\\n  $BASE_URL$/api/reports/$PROJECT$/$VERSION$ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: dashboard.stryker-mutator.io' \\\n  -H 'X-Api-Key: $API_KEY$' \\\n  -d @mutation-testing-report.json\n")),Object(o.b)("p",null,"Multiple results per ",Object(o.b)("inlineCode",{parentName:"p"},"VERSION")," are also supported using this url: ",Object(o.b)("inlineCode",{parentName:"p"},"$BASE_URL$/api/reports/$PROJECT$/$VERSION$?module=$MODULE_NAME$")),Object(o.b)("p",null,"The variables here are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"BASE_URL"),": ",Object(o.b)("inlineCode",{parentName:"li"},"https://dashboard.stryker-mutator.io")," for production, ",Object(o.b)("inlineCode",{parentName:"li"},"https://stryker-dashboard-acceptance.azurewebsites.net/")," for acceptance"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PROJECT"),": The name registered with the dashboard. It is in the form of ",Object(o.b)("inlineCode",{parentName:"li"},"gitProvider/organization/repository"),". At the moment the dashboard backend only supports ",Object(o.b)("inlineCode",{parentName:"li"},"github.com")," as a git provider, but we will also support ",Object(o.b)("inlineCode",{parentName:"li"},"gitlab.com"),"/",Object(o.b)("inlineCode",{parentName:"li"},"bitbucket.org"),", etc. in the future. It can have an indefinite number of levels. Slashes (",Object(o.b)("inlineCode",{parentName:"li"},"/"),") in this name are ",Object(o.b)("em",{parentName:"li"},"not")," escaped. For example ",Object(o.b)("inlineCode",{parentName:"li"},"github.com/stryker-mutator/stryker-net"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"VERSION"),': the version of the report. This should be filled with the branch name, git tag or git sha (although no validation is done). You can override a report of a specific version, like docker tags. Slashes in the version should not be encoded. For example, it\'s valid to use "feat/logging".'),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"API_KEY"),": The API key that you retrieved by enabling the report on the dashboard.stryker-mutator.io website."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"REPORT_JSON"),": A valid report according to the ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/stryker-mutator/mutation-testing-elements/tree/master/packages/mutation-testing-report-schema"}),"mutation testing report schema"),", or a mutation score only report in the form of ",Object(o.b)("inlineCode",{parentName:"li"},'{ "mutationScore": 42 }')," (this way, you will have a mutation score badge, but no other information is stored)."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"MODULE"),": Optional. If you want to store multiple reports for a version, you can use this value to separate them logically, for example, in a mono-repo setup where each package (or project or module) delivers a report.")))}p.isMDXComponent=!0},181:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return m}));var a=r(0),n=r.n(a);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function b(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),p=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):b(b({},t),e)),r},s=function(e){var t=p(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(r),u=a,m=s["".concat(i,".").concat(u)]||s[u]||d[u]||o;return r?n.a.createElement(m,b(b({ref:t},c),{},{components:r})):n.a.createElement(m,b({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var b={};for(var l in t)hasOwnProperty.call(t,l)&&(b[l]=t[l]);b.originalType=e,b.mdxType="string"==typeof e?e:a,i[1]=b;for(var c=2;c<o;c++)i[c]=r[c];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);