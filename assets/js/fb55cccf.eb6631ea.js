(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{190:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),o=(n(0),n(197));const a={title:"NodeJS",custom_edit_url:"https://github.com/stryker-mutator/stryker-js/edit/master/docs/guides/nodejs.md"},i={unversionedId:"stryker-js/guides/nodejs",id:"stryker-js/guides/nodejs",isDocsHomePage:!1,title:"NodeJS",description:"Stryker can run Mutation Testing on all NodeJS projects. Either by using one of the test runner plugins or with the command test runner. It also supports a custom buildCommand. This command is useful to compile TypeScript or babel code or to bundle your code.",source:"@site/docs/stryker-js/guides/nodejs.md",sourceDirName:"stryker-js/guides",slug:"/stryker-js/guides/nodejs",permalink:"/docs/stryker-js/guides/nodejs",editUrl:"https://github.com/stryker-mutator/stryker-js/edit/master/docs/guides/nodejs.md",version:"current",frontMatter:{title:"NodeJS",custom_edit_url:"https://github.com/stryker-mutator/stryker-js/edit/master/docs/guides/nodejs.md"},sidebar:"docs",previous:{title:"VueJS",permalink:"/docs/stryker-js/guides/vuejs"},next:{title:"Create a plugin",permalink:"/docs/stryker-js/guides/create-a-plugin"}},s=[{value:"About transpiling",id:"about-transpiling",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Build command",id:"build-command",children:[]},{value:"Test runner",id:"test-runner",children:[]}]},{value:"Run",id:"run",children:[]},{value:"Troubleshooting",id:"troubleshooting",children:[]}],c={toc:s};function u({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Stryker can run Mutation Testing on all NodeJS projects. Either by using one of the test runner plugins or with the command test runner. It also supports a custom ",Object(o.b)("inlineCode",{parentName:"p"},"buildCommand"),". This command is useful to compile TypeScript or babel code or to bundle your code."),Object(o.b)("h2",{id:"about-transpiling"},"About transpiling"),Object(o.b)("p",null,"There are multiple scenarios of transpiling code when running your tests. "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Ahead-of-time"),Object(o.b)("br",{parentName:"li"}),"Use ",Object(o.b)("inlineCode",{parentName:"li"},"tsc")," or ",Object(o.b)("a",{parentName:"li",href:"https://babeljs.io/docs/en/babel-cli"},Object(o.b)("inlineCode",{parentName:"a"},"@babel/cli"))," to compile your code before testing or use ",Object(o.b)("a",{parentName:"li",href:"https://webpack.js.org/api/cli/"},"webpack")," or another bundler to create a bundle before running tests. "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Just-in-time"),Object(o.b)("br",{parentName:"li"}),"Use ",Object(o.b)("a",{parentName:"li",href:"https://www.npmjs.com/package/ts-node"},Object(o.b)("inlineCode",{parentName:"a"},"ts-node"))," or ",Object(o.b)("a",{parentName:"li",href:"https://babeljs.io/docs/en/babel-register/"},Object(o.b)("inlineCode",{parentName:"a"},"@babel/register"))," as a just-in-time compiler to compile your code on the fly.")),Object(o.b)("p",null,"Both scenarios are supported, however using just-in-time transpiling during mutation testing is not recommended because it means running the compiler a large number of times. Since ",Object(o.b)("a",{parentName:"p",href:"https://stryker-mutator.io/blog/announcing-stryker-4-mutation-switching"},"Stryker uses mutation switching"),", compiling only once is preferred. Don't worry; this guide will help you configuring Stryker correctly."),Object(o.b)("p",null,"If you manage your code's compilation through a ",Object(o.b)("inlineCode",{parentName:"p"},"tsconfig.json")," file, this guide ensures that your TypeScript code uses that configuration."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"This guide does not cover using ",Object(o.b)("inlineCode",{parentName:"p"},"@stryker-mutator/typescript-checker"),". Please review the page ",Object(o.b)("a",{parentName:"p",href:"/docs/stryker-js/typescript-checker"},"here")," if you want to include the typescript checker.")),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Please follow this configuration guide. Place the configuration examples inside your ",Object(o.b)("inlineCode",{parentName:"p"},"stryker.conf.json")," file."),Object(o.b)("h3",{id:"build-command"},"Build command"),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n   "buildCommand": "tsc -b path/to/tsconfig.json"\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"You generally don't have to configure a ",Object(o.b)("inlineCode",{parentName:"p"},"buildCommand")," if you're using the Jest test runner.")),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"buildCommand")," to configure a command that Stryker can run in its sandbox, just after your code is mutated. If you're using a bundler, you will need to change this command by a command that creates a bundle, like ",Object(o.b)("inlineCode",{parentName:"p"},'"webpack --config webpack.test.config.js"'),". You can also use a script you've defined in package.json, for example ",Object(o.b)("inlineCode",{parentName:"p"},'"npm run build"'),". "),Object(o.b)("p",null,"Don't worry about your ",Object(o.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/PATH_(variable)"},"PATH environment variable"),"; Stryker will make sure your local dependencies are available there before executing the build command inside the sandbox. "),Object(o.b)("p",null,"If you're using ",Object(o.b)("inlineCode",{parentName:"p"},"ts-node")," or ",Object(o.b)("inlineCode",{parentName:"p"},"@babel/register")," to just-in-time compile during unit testing, then it's a good idea to configure your build command-equivalent here. Some examples:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"For ts-node: ",Object(o.b)("inlineCode",{parentName:"li"},"tsc -b path/to/tsconfig.json")),Object(o.b)("li",{parentName:"ul"},"For @babel/register: ",Object(o.b)("inlineCode",{parentName:"li"},"babel src --out-dir lib"),"\n(using the ",Object(o.b)("a",{parentName:"li",href:"https://babeljs.io/docs/en/babel-cli"},"@babel/cli"),")")),Object(o.b)("p",null,"Be sure to test them out yourself first."),Object(o.b)("h3",{id:"test-runner"},"Test runner"),Object(o.b)("p",null,"Next, configure the test runner you're using. If you're using a different test runner than described here, you can still use the default ",Object(o.b)("a",{parentName:"p",href:"/docs/stryker-js/configuration#testrunner-string"},"command test runner")),Object(o.b)("h4",{id:"mocha"},"Mocha"),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "coverageAnalysis": "perTest",\n  "mochaOptions": {\n    "config": "path/to/your/.mocharc.js/file",\n    "spec": [ "dist/test/**/*.spec.js"]\n  },\n  "testRunner": "mocha"\n}\n')),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"mochaOptions")," to configure the mocha test runner. If your project uses a ",Object(o.b)("a",{parentName:"p",href:"https://mochajs.org/#-config-path"},"mocha config file"),", you can specify it in ",Object(o.b)("inlineCode",{parentName:"p"},"mochaOptions.config"),"; use other settings to override settings in the config file. "),Object(o.b)("p",null,"If you're using a ",Object(o.b)("inlineCode",{parentName:"p"},"buildCommand"),", be sure to configure the ",Object(o.b)("em",{parentName:"p"},"js output files in the ",Object(o.b)("inlineCode",{parentName:"em"},"mochaOptions.spec")," instead of the ts input files"),", otherwise mocha won't be able to find your test files."),Object(o.b)("p",null,"If you choose to keep using your just-in-time compiler and accept the performance penalty, you can use ",Object(o.b)("a",{parentName:"p",href:"/docs/stryker-js/mocha-runner#mochaoptionsrequire-string"},"mochaOptions.require")," to configure your ",Object(o.b)("inlineCode",{parentName:"p"},"ts-node")," or ",Object(o.b)("inlineCode",{parentName:"p"},"@babel/register")," transpiler. Also, you may want to override the ts-node configuration options via environment variables. You can do so using environment variables, for example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "test:mutation": "cross-env TS_NODE_PROJECT=path/to/your/tsconfig.json stryker run"\n  }\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/cross-env"},Object(o.b)("inlineCode",{parentName:"a"},"cross-env"))," is a tool to help you set environment variables across platforms.")),Object(o.b)("h4",{id:"jest"},"Jest"),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "coverageAnalysis": "perTest",\n  "jest": {\n    "projectType": "custom",\n    "configFile": "path/to/your/custom/jestConfig.js"\n   },\n  "tempDirName": "stryker-tmp",\n  "testRunner": "jest"\n}\n')),Object(o.b)("p",null,"Jest has two ways to provide TypeScript compilation, either ",Object(o.b)("a",{parentName:"p",href:"https://jestjs.io/docs/en/getting-started#using-typescript"},"using babel")," (default) or using ",Object(o.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/ts-jest"},"ts-jest"),". For both, you ",Object(o.b)("em",{parentName:"p"},"don't need to configure the ",Object(o.b)("inlineCode",{parentName:"em"},"buildCommand")),". "),Object(o.b)("h2",{id:"run"},"Run"),Object(o.b)("p",null,"Run Stryker as per usual, either using a custom script in package.json or using ",Object(o.b)("inlineCode",{parentName:"p"},"npx"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},'npx stryker run\n# OR, if your script is called "test:mutation"\nnpm run test:mutation \n')),Object(o.b)("h4",{id:"jasmine"},"Jasmine"),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "coverageAnalysis": "perTest",\n  "jasmineConfigFile": "spec/support/jasmine.json",\n  "testRunner": "jasmine"\n}\n')),Object(o.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(o.b)("p",null,"Please take a look at the ",Object(o.b)("a",{parentName:"p",href:"/docs/stryker-js/troubleshooting"},"troubleshooting page")," when you run into any problems setting up StrykerJS."))}u.isMDXComponent=!0},197:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),b=l(n),m=r,d=b["".concat(i,".").concat(m)]||b[m]||p[m]||a;return n?o.a.createElement(d,s(s({ref:t},u),{},{components:n})):o.a.createElement(d,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);